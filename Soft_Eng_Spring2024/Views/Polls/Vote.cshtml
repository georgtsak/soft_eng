@model Soft_Eng_Spring2024.Models.Poll

@{
    ViewData["Title"] = "Δημοσκόπηση";
    Dictionary<string, int> pollDict = TempData["pollDict"] as Dictionary<string, int>;
    DateOnly today = DateOnly.FromDateTime(DateTime.Now);
}
<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/billboard.js/dist/billboard.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/billboard.js/dist/billboard.min.css" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" type="text/css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.1/Chart.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/css/forma_anakoin_events.css" />
<link rel="stylesheet" type="text/css" href="~/css/auth.css" />
<style>
    .date-group {
        display: flex;
        gap: 10px;
    }

    .date-input {
        display: flex;
        flex-direction: column;
    }

    .poll-container {
        display: flex;
        gap: 10px;
    }

    .poll-column {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .poll-input {
        margin-bottom: 10px;
    }

    .hidden {
        display: none;
    }
</style>

<div class="hero_area">
    <div class="container">
        <div class="forma-wrap">
            <div class="forma-html">
                <p class="tab" style="color:#fff;border-color: #790621;">
                    @Html.DisplayFor(model=>model.Title)
                    <div class="login-form">
                        <div id="chart-@Model.Id"></div>                    
                            @if (Model.StartDate <= today && today <= Model.FinishDate)
                            {
                                @using (Html.BeginForm("Vote", "Polls", FormMethod.Post))
                                {
                                    @foreach (var item in pollDict)
                                    {
                                        <p class="tab" style="color:#fff;">@item.Key @Html.RadioButton("vote", item.Key)</p><br/>
                                    }
                                    <div class="hr"></div>
                                    <div class="group">
                                        <input type="hidden" value="@Model.Id)">
                                        @if (Model.Voters.Contains(Int32.Parse(User.FindFirst("uId").Value)))
                                        {
                                        <h6 class="p-1 mb-2 bg-danger text-white" style="display: inline-block;">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle" viewBox="0 0 16 16">
                                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z" />
                                            </svg>&nbsp;Έχετε συμμετάσχει στην ψηφοφορία
                                        </h6>
                                        }
                                        else
                                        {
                                            <input type="submit" class="btn float-right login_btn" value="Προσθήκη Ψήφου">
                                        }
                                    </div>
                            }
                            }
                            else if (Model.StartDate > today) 
                            {
                            <div class="hr"></div>
                            <h6 class="p-1 mb-2 bg-danger text-white" style="display: inline-block;">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle" viewBox="0 0 16 16">
                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                    <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z" />
                                </svg>&nbsp;Η ψηφοφορία δεν έχει ξεκινήσει!
                            </h6>
                            }
                            else
                            {
                            <div class="hr"></div>
                            <h6 class="p-1 mb-2 bg-danger text-white" style="display: inline-block;">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle" viewBox="0 0 16 16">
                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                    <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z" />
                                </svg>&nbsp;Η ψηφοφορία έχει λήξει!
                            </h6>
                            }

                        <script>
                            var votesData = @Html.Raw(Model.Votes);

                            var chartData = Object.keys(votesData).map(function (key) {
                                console.log([key, votesData[key]]);
                                return [key, votesData[key]];
                            });

                            var totalVotes = Object.values(votesData).reduce(function (acc, voteCount) {
                                return acc + voteCount;
                            }, 0);

                            var chart = bb.generate({
                                data: {
                                    columns: chartData,
                                    type: "donut",
                                    onclick: function (d, i) {
                                        console.log("onclick", d, i);
                                    },
                                    onover: function (d, i) {
                                        console.log("onover", d, i);
                                    },
                                    onout: function (d, i) {
                                        console.log("onout", d, i);
                                    },
                                },
                                donut: {
                                    title: totalVotes.toString() + "\nΨήφοι",
                                },
                                bindto: "#chart-@Model.Id",
                            });
                        </script>
                    </div>
            </div>
        </div>
    </div>
</div>
